<Button x:Class="Controls.ImageButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Controls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Button.Resources>
        <ResourceDictionary Source="Resources/ControlResource.xaml"></ResourceDictionary>
    </Button.Resources>
    <Button.Template>
        <ControlTemplate TargetType="{x:Type Button}">
            <Grid ClipToBounds="True" MouseLeftButtonDown="Grid_OnMouseLeftButtonDown">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.4" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MyBorder" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="MyBorder" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding local:ImageButton.CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter Margin="{TemplateBinding local:ImageButton.ContentMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentControl Margin="{TemplateBinding local:ImageButton.ImageMargin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Viewbox Stretch="Uniform">
                                <Image Style="{TemplateBinding local:ImageButton.ImageStyle}"  Panel.ZIndex="1"></Image>
                            </Viewbox>
                        </ContentControl>
                    </StackPanel>
                </Border>
                <Path Fill="{TemplateBinding local:ImageButton.WaveBackground}" x:Name="MyPath" MaxWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding ActualHeight}">
                    <Path.Data>
                        <EllipseGeometry x:Name="MyEllipseGeometry" RadiusX="0" RadiusY="{Binding RelativeSource={RelativeSource Self},Path=RadiusX}"></EllipseGeometry>
                    </Path.Data>
                </Path>
            </Grid>
        </ControlTemplate>
    </Button.Template>
</Button>
